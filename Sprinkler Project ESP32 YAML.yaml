esphome:
  name: "xxxxxxxxxxxxxxxxxxxxxxx"
  
#------------------------------------------------------
#------------------------------------------------------
#------------------------------------------------------
#          on-boot command to initialize OLED
#          template switch for Home Assistant
#------------------------------------------------------

  on_boot:
    priority: -100.0
    then:
      - switch.template.publish:
          id: template_switch
          state: ON

#------------------------------------------------------
#------------------------------------------------------
#   Initial ESP32 board configuration
#   shown as an example only
#------------------------------------------------------
esp32:
  board: esp-wrover-kit
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

ota:
  password: "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

wifi:
  manual_ip:
    static_ip: xxx.xxx.xxx
    gateway: xxx.xxx.xxx
    subnet: 255.255.255.0
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "xxxxxxxxxxxxxxxxxx"
    password: "xxxxxxxxxxxxx"

#------------------------------------------------------
#------------------------------------------------------
#------------------------------------------------------
#   You will need to set up your own fonts
#------------------------------------------------------

font:
  - file: "Roboto-Regular.ttf"
    id: my_font
    size: 18
  - file: "Roboto-Regular.ttf"
    id: my_font_2
    size: 18
  - file: "Roboto-Regular.ttf"
    id: my_font_3
    size: 12
  - file: "Roboto-Regular.ttf"
    id: my_font_5
    size: 14
  - file: "Roboto-Regular.ttf"
    id: my_font_4
    size: 36
  - file: "Roboto-Regular.ttf"
    id: my_font_6
    size: 10
  - file: "Roboto-Regular.ttf"
    id: my_font_7
    size: 24
  - file: "Roboto-Regular.ttf"
    id: my_font_8
    size: 30
#------------------------------------------------------
#------------------------------------------------------
#  Colors used for my configuration
#------------------------------------------------------

color:
  - id: my_red
    red: 100%
    green: 20%
    blue: 25%
    white: 0%
  - id: my_white
    white: 100%
    blue: 5%
    red: 55%
    green: 35%
  - id: my_blue
    blue: 100%
  - id: my_green
    green: 100%
  - id: my_blue_bold
    blue: 100%
#-------------------------------------------------------------  
#------------------------------------------------------------- 
#------------------------------------------------------------- 
captive_portal:
    
time:
  - platform: homeassistant
    id: esptime


spi:
  clk_pin: GPIO18
  mosi_pin: GPIO23
  miso_pin: GPIO19

i2c:
  - id: bus_a
    sda: GPIO25
    scl: GPIO26
    scan: true 
  - id: bus_b
    sda: GPIO13
    scl: GPIO27
    scan: true
tca9548a :
  - address: 0x70
    id: multiplex0
    i2c_id: bus_a
    channels:
      - bus_id: multiplex0channel0
        channel: 0
      - bus_id: multiplex0channel1
        channel: 1
      - bus_id: multiplex0channel2
        channel: 2
      - bus_id: multiplex0channel3
        channel: 3
      - bus_id: multiplex0channel4
        channel: 4
      - bus_id: multiplex0channel5
        channel: 5
      - bus_id: multiplex0channel6
        channel: 6
      - bus_id: multiplex0channel7
        channel: 7
pcf8574:
  - id: 'pcf8574_hub_2'
    i2c_id: bus_b
    address: 0x27
    pcf8575: true
  - id: 'pcf8574_hub'
    i2c_id: bus_a
    address: 0x20
    pcf8575: true
#------------------------------------------------------------- 
#------------------------------------------------------------- 
# 12v and 5v Line voltage sensors
#------------------------------------------------------------- 
sensor:
  - platform: ina219
    i2c_id: multiplex0channel0
    address: 0x40
    shunt_resistance: 0.1 ohm
    current:
      name: "INA219 Current enc12v-0"
      id: ina219_current0
    power:
      name: "INA219 Power enc12v-0"
      id: ina219_power0
    bus_voltage:
      name: "INA219 Bus Voltage enc12v-0"
      id: ina219_bus_v0
    shunt_voltage:
      name: "INA219 Shunt Voltage enc12v-0"
      id: ina219_shunt_v0
    max_voltage: 12.8V
    max_current: 3.2A
    update_interval: 60s

# ------------------------------------------------------
  - platform: ina219
    i2c_id: multiplex0channel1
    address: 0x40
    shunt_resistance: 0.1 ohm
    current:
      name: "INA219 Current enc12v-1"
      id: ina219_current1
    power:
      name: "INA219 Power enc12v-1"
      id: ina219_power1
    bus_voltage:
      name: "INA219 Bus Voltage enc12v-1"
      id: ina219_bus_v1
    shunt_voltage:
      name: "INA219 Shunt Voltage enc12v-1"
      id: ina219_shunt_v1
    max_voltage: 12.8V
    max_current: 3.2A
    update_interval: 60s
#------------------------------------------------------------- 
#------------------------------------------------------------- 
#    Enclosure temperature/humidity sensors
#------------------------------------------------------------- 

  - platform: bme280
    i2c_id: multiplex0channel5
    id: t2
    temperature:
      filters:
      - lambda: return x * (9.0/5.0) + 32.0;
      unit_of_measurement: "Â°F"
      name: "Enclosure-enc12v-1-Int-Temperature"
      id: int_t
      oversampling: 16x
    pressure:
      name: "Enclosure-enc12v-1-Int-Pressure"
      id: int_p
    humidity:
      name: "Enclosure-enc12v-1-Int-Humidity"
      id: int_h
    address: 0x76
    update_interval: 20s


#-------------------------------------------------------------          
  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "Enc12v WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"


#-------------------------------------------------------------
  - platform: wifi_signal
    name: "Enc12v WiFi Signal Sensor"
    id: my_wifi_2
    update_interval: 60s
#-------------------------------------------------------------
#-------------------------------------------------------------
#    Template to send valve time remaining to Home Assistant
#-------------------------------------------------------------

  - platform: template
    name: "Enc12v Irrigation Time Remaining Sensor"
    unit_of_measurement: 'Sec'
    lambda: "return id(enc12v_lawn_sprinkler_ctrlr).time_remaining_active_valve().value();"
    update_interval: 1s 
    accuracy_decimals: 0
  - platform: template
    name: "Enc12v Irrigation Active Valve"
    id: active_valve
    accuracy_decimals: 0
    lambda: |-
     if (id(enc12v_lawn_sprinkler_ctrlr).active_valve().has_value()){
      auto active_valve = id(enc12v_lawn_sprinkler_ctrlr).active_valve().value() + 1;
      return active_valve;
      }else{
        return 0;
      }
    update_interval: 5s
#-------------------------------------------------------------------------------------
#  Use this yaml in Home Assistant to convert to minutes/seconds
#       for display on your Home Assistant page.
#   This goes in the sensors.yaml file:
#
#    - platform: template
#    sensors:
#      enc12v_valve_time_convert:
#        friendly_name: V Time Convert
#        value_template: >-
#          {% set s = states('sensor.enc12v_irrigation_time_remaining_sensor')|int %}
#          {{ s | timestamp_custom("%M:%S") }}   
#
#---------------------------------------------------------------------------------------


#-------------------------------------------------------------
#-------------------------------------------------------------
text_sensor:
  - platform: wifi_info
    ip_address:
      id: myip_2
      name: Enc12v ESP IP Address
    ssid:
      id: myssid_2
      name: Enc12v ESP Connected SSID

#-------------------------------------------------------------
#-------------------------------------------------------------
#   Enclosure panel rocker switch
#-------------------------------------------------
binary_sensor:
  - platform: gpio
    name: "Enc12v-Button"
    internal: true
    pin:
      pcf8574: pcf8574_hub
      number: 8
      mode: INPUT
      inverted: true
              
    on_press:
      - lambda: id(my_display).turn_on();
      - lambda: id(my_display_2).turn_on();
      - switch.template.publish:
            id: template_switch
            state: ON 
    on_release:
      - delay: 5s
      - lambda: id(my_display).turn_off();
      - lambda: id(my_display_2).turn_off();
      - switch.template.publish:
            id: template_switch
            state: OFF 
#-------------------------------------------------
#-------------------------------------------------
#  4 circuit 12v relay for valve on-off status to trigger
#  corresponding sensor for Home Assistant.
#  Indicator leads attached to panel Valve LEDs
#-------------------------------------------------
  - platform: gpio
    name: "Enc12v_MV2_Off"
    publish_initial_state: true
    internal: false
    pin:
      pcf8574: pcf8574_hub
      number: 14
      mode: INPUT
      inverted: true
  - platform: gpio
    name: "Enc12v_MV2_On"
    publish_initial_state: true
    internal: false
    pin:
      pcf8574: pcf8574_hub
      number: 15
      mode: INPUT
      inverted: true
  - platform: gpio
    name: "Enc12v_MV1_Off"
    publish_initial_state: true
    internal: false
    pin:
      pcf8574: pcf8574_hub
      number: 16
      mode: INPUT
      inverted: true
  - platform: gpio
    name: "Enc12v_MV1_On"
    publish_initial_state: true
    internal: false
    pin:
      pcf8574: pcf8574_hub
      number: 17
      mode: INPUT
      inverted: true
#----------------------------------------------------------------------
#----------------------------------------------------------------------
#   Standard ESPhome sprinkler setup 18 sprinkler valves, 2 pumps/main valves
#----------------------------------------------------------------------
sprinkler:
  - id: enc12v_lawn_sprinkler_ctrlr
    main_switch: "enc12v_Lawn Sprinklers"
    auto_advance_switch: "enc12v_Lawn Sprinklers Auto Advance"
    reverse_switch: "enc12v_Lawn Sprinklers Reverse"
    valve_overlap: 3s
    pump_start_valve_delay: 10s
    valves:
      - valve_switch: "enc12v_Front Lawn 1"
        enable_switch: "enc12v_Enable Front Lawn 1"
        pump_switch_id: enc12v_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw0
      - valve_switch: "enc12v_Front Lawn 2"
        enable_switch: "enc12v_Enable Front Lawn 2"
        pump_switch_id: enc12v_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw1
      - valve_switch: "enc12v_Front Lawn 3"
        enable_switch: "enc12v_Enable Front Lawn 3"
        pump_switch_id: enc12v_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw2
      - valve_switch: "enc12v_Front Lawn 4"
        enable_switch: "enc12v_Enable Front Lawn 4"
        pump_switch_id: enc12v_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw3
      - valve_switch: "enc12v_Front Lawn 5"
        enable_switch: "enc12v_Enable Front Lawn 5"
        pump_switch_id: enc12v_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw4
      - valve_switch: "enc12v_Front Lawn 6"
        enable_switch: "enc12v_Enable Front Lawn 6"
        pump_switch_id: enc12v_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw5
#-------------------------------------------------------------
      - valve_switch: "enc12v_Front Lawn 7"
        enable_switch: "enc12v_Enable Front Lawn 7"
        pump_switch_id: enc12v_dpdt2
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw6
      - valve_switch: "enc12v_Front Lawn 8"
        enable_switch: "enc12v_Enable Front Lawn 8"
        pump_switch_id: enc12v_dpdt2
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw7
      - valve_switch: "enc12v_Front Lawn 9"
        enable_switch: "enc12v_Enable Front Lawn 9"
        pump_switch_id: enc12v_dpdt2
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw8
      - valve_switch: "enc12v_Front Lawn 10"
        enable_switch: "enc12v_Enable Front Lawn 10"
        pump_switch_id: enc12v_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw9
      - valve_switch: "enc12v_Front Lawn 11"
        enable_switch: "enc12v_Enable Front Lawn 11"
        pump_switch_id: enc12v_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw10
      - valve_switch: "enc12v_Front Lawn 12"
        enable_switch: "enc12v_Enable Front Lawn 12"
        pump_switch_id: enc12v_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw11
#-------------------------------------------------------------
      - valve_switch: "enc12v_Front Lawn 13"
        enable_switch: "enc12v_Enable Front Lawn 13"
        pump_switch_id: enc12v_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw12
      - valve_switch: "enc12v_Front Lawn 14"
        enable_switch: "enc12v_Enable Front Lawn 14"
        pump_switch_id: enc12v_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw13
      - valve_switch: "enc12v_Front Lawn 15"
        enable_switch: "enc12v_Enable Front Lawn 15"
        pump_switch_id: enc12v_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw14
      - valve_switch: "enc12v_Front Lawn 16"
        enable_switch: "enc12v_Enable Front Lawn 16"
        pump_switch_id: enc12v_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw15
      - valve_switch: "enc12v_Front Lawn 17"
        enable_switch: "enc12v_Enable Front Lawn 17"
        pump_switch_id: enc12v_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw16
      - valve_switch: "enc12v_Front Lawn 18"
        enable_switch: "enc12v_Enable Front Lawn 18"
        pump_switch_id: enc12v_dpdt1
        run_duration: 300s
        valve_switch_id: lawn_sprinkler_valve_sw17
#-------------------------------------------------------------
#-------------------------------------------------------------
# Configuration to set multiplier via number
#------------------------------------------------------------
number:
  - platform: template
    id: enc12v_sprinkler_ctrlr_multiplier
    name: "enc12v_Sprinkler Controller Multiplier"
    min_value: 1.0
    max_value: 5.0
    step: 1.0
    lambda: "return id(enc12v_lawn_sprinkler_ctrlr).multiplier();"
    set_action:
      - sprinkler.set_multiplier:
          id: enc12v_lawn_sprinkler_ctrlr
          multiplier: !lambda 'return x;'
#-------------------------------------------------------------
#-------------------------------------------------------------
# Configuration to set individual sprinkler valve durations via number
#------------------------------------------------------------

  - platform: template
    id: sprinkler_ctrlr_duration_v_1
    name: "enc12v Sprinkler Valve Duration 1"
    min_value: 300
    max_value: 1200
    step: 60
    update_interval: 5s
    lambda: "return id(enc12v_lawn_sprinkler_ctrlr).valve_run_duration(0);"
    set_action:
      - sprinkler.set_valve_run_duration:
          id: enc12v_lawn_sprinkler_ctrlr
          valve_number: 0
          run_duration: !lambda 'return x;'

  - platform: template
    id: sprinkler_ctrlr_duration_v_2
    name: "enc12v Sprinkler Valve Duration 2"
    min_value: 300
    max_value: 1200
    step: 60
    lambda: "return id(enc12v_lawn_sprinkler_ctrlr).valve_run_duration(1);"
    set_action:
      - sprinkler.set_valve_run_duration:
          id: enc12v_lawn_sprinkler_ctrlr
          valve_number: 1
          run_duration: !lambda 'return x;'

  - platform: template
    id: sprinkler_ctrlr_duration_v_3
    name: "enc12v Sprinkler Valve Duration 3"
    min_value: 300
    max_value: 1200
    step: 60
    lambda: "return id(enc12v_lawn_sprinkler_ctrlr).valve_run_duration(2);"
    set_action:
      - sprinkler.set_valve_run_duration:
          id: enc12v_lawn_sprinkler_ctrlr
          valve_number: 2
          run_duration: !lambda 'return x;'

  - platform: template
    id: sprinkler_ctrlr_duration_v_4
    name: "enc12v Sprinkler Valve Duration 4"
    min_value: 300
    max_value: 1200
    step: 60
    lambda: "return id(enc12v_lawn_sprinkler_ctrlr).valve_run_duration(3);"
    set_action:
      - sprinkler.set_valve_run_duration:
          id: enc12v_lawn_sprinkler_ctrlr
          valve_number: 3
          run_duration: !lambda 'return x;'

  - platform: template
    id: sprinkler_ctrlr_duration_v_5
    name: "enc12v Sprinkler Valve Duration 5"
    min_value: 300
    max_value: 1200
    step: 60
    lambda: "return id(enc12v_lawn_sprinkler_ctrlr).valve_run_duration(4);"
    set_action:
      - sprinkler.set_valve_run_duration:
          id: enc12v_lawn_sprinkler_ctrlr
          valve_number: 4
          run_duration: !lambda 'return x;'


  - platform: template
    id: sprinkler_ctrlr_duration_v_6
    name: "enc12v Sprinkler Valve Duration 6"
    min_value: 300
    max_value: 1200
    step: 60
    lambda: "return id(enc12v_lawn_sprinkler_ctrlr).valve_run_duration(5);"
    set_action:
      - sprinkler.set_valve_run_duration:
          id: enc12v_lawn_sprinkler_ctrlr
          valve_number: 5
          run_duration: !lambda 'return x;'

  - platform: template
    id: sprinkler_ctrlr_duration_v_7
    name: "enc12v Sprinkler Valve Duration 7"
    min_value: 300
    max_value: 1200
    step: 60
    lambda: "return id(enc12v_lawn_sprinkler_ctrlr).valve_run_duration(6);"
    set_action:
      - sprinkler.set_valve_run_duration:
          id: enc12v_lawn_sprinkler_ctrlr
          valve_number: 6
          run_duration: !lambda 'return x;'
  - platform: template
    id: sprinkler_ctrlr_duration_v_8
    name: "enc12v Sprinkler Valve Duration 8"
    min_value: 300
    max_value: 1200
    step: 60
    lambda: "return id(enc12v_lawn_sprinkler_ctrlr).valve_run_duration(7);"
    set_action:
      - sprinkler.set_valve_run_duration:
          id: enc12v_lawn_sprinkler_ctrlr
          valve_number: 7
          run_duration: !lambda 'return x;'
  - platform: template
    id: sprinkler_ctrlr_duration_v_9
    name: "enc12v Sprinkler Valve Duration 9"
    min_value: 300
    max_value: 1200
    step: 60
    lambda: "return id(enc12v_lawn_sprinkler_ctrlr).valve_run_duration(8);"
    set_action:
      - sprinkler.set_valve_run_duration:
          id: enc12v_lawn_sprinkler_ctrlr
          valve_number: 8
          run_duration: !lambda 'return x;'
  - platform: template
    id: sprinkler_ctrlr_duration_v_10
    name: "enc12v Sprinkler Valve Duration 10"
    min_value: 300
    max_value: 1200
    step: 60
    lambda: "return id(enc12v_lawn_sprinkler_ctrlr).valve_run_duration(9);"
    set_action:
      - sprinkler.set_valve_run_duration:
          id: enc12v_lawn_sprinkler_ctrlr
          valve_number: 9
          run_duration: !lambda 'return x;'
  - platform: template
    id: sprinkler_ctrlr_duration_v_11
    name: "enc12v Sprinkler Valve Duration 11"
    min_value: 300
    max_value: 1200
    step: 60
    lambda: "return id(enc12v_lawn_sprinkler_ctrlr).valve_run_duration(10);"
    set_action:
      - sprinkler.set_valve_run_duration:
          id: enc12v_lawn_sprinkler_ctrlr
          valve_number: 10
          run_duration: !lambda 'return x;'

  - platform: template
    id: sprinkler_ctrlr_duration_v_12
    name: "enc12v Sprinkler Valve Duration 12"
    min_value: 300
    max_value: 1200
    step: 60
    lambda: "return id(enc12v_lawn_sprinkler_ctrlr).valve_run_duration(11);"
    set_action:
      - sprinkler.set_valve_run_duration:
          id: enc12v_lawn_sprinkler_ctrlr
          valve_number: 11
          run_duration: !lambda 'return x;'

  - platform: template
    id: sprinkler_ctrlr_duration_v_13
    name: "enc12v Sprinkler Valve Duration 13"
    min_value: 300
    max_value: 1200
    step: 60
    lambda: "return id(enc12v_lawn_sprinkler_ctrlr).valve_run_duration(12);"
    set_action:
      - sprinkler.set_valve_run_duration:
          id: enc12v_lawn_sprinkler_ctrlr
          valve_number: 12
          run_duration: !lambda 'return x;'
  - platform: template
    id: sprinkler_ctrlr_duration_v_14
    name: "enc12v Sprinkler Valve Duration 14"
    min_value: 300
    max_value: 1200
    step: 60
    lambda: "return id(enc12v_lawn_sprinkler_ctrlr).valve_run_duration(13);"
    set_action:
      - sprinkler.set_valve_run_duration:
          id: enc12v_lawn_sprinkler_ctrlr
          valve_number: 13
          run_duration: !lambda 'return x;'
  - platform: template
    id: sprinkler_ctrlr_duration_v_15
    name: "enc12v Sprinkler Valve Duration 15"
    min_value: 300
    max_value: 1200
    step: 60
    lambda: "return id(enc12v_lawn_sprinkler_ctrlr).valve_run_duration(14);"
    set_action:
      - sprinkler.set_valve_run_duration:
          id: enc12v_lawn_sprinkler_ctrlr
          valve_number: 14
          run_duration: !lambda 'return x;'
  - platform: template
    id: sprinkler_ctrlr_duration_v_16
    name: "enc12v Sprinkler Valve Duration 16"
    min_value: 300
    max_value: 1200
    step: 60
    lambda: "return id(enc12v_lawn_sprinkler_ctrlr).valve_run_duration(15);"
    set_action:
      - sprinkler.set_valve_run_duration:
          id: enc12v_lawn_sprinkler_ctrlr
          valve_number: 15
          run_duration: !lambda 'return x;'
  - platform: template
    id: sprinkler_ctrlr_duration_v_17
    name: "enc12v Sprinkler Valve Duration 17"
    min_value: 300
    max_value: 1200
    step: 60
    lambda: "return id(enc12v_lawn_sprinkler_ctrlr).valve_run_duration(16);"
    set_action:
      - sprinkler.set_valve_run_duration:
          id: enc12v_lawn_sprinkler_ctrlr
          valve_number: 16
          run_duration: !lambda 'return x;'

  - platform: template
    id: sprinkler_ctrlr_duration_v_18
    name: "enc12v Sprinkler Valve Duration 18"
    min_value: 300
    max_value: 1200
    step: 60
    lambda: "return id(enc12v_lawn_sprinkler_ctrlr).valve_run_duration(17);"
    set_action:
      - sprinkler.set_valve_run_duration:
          id: enc12v_lawn_sprinkler_ctrlr
          valve_number: 17
          run_duration: !lambda 'return x;'
#-------------------------------------------------------------
#-------------------------------------------------------------
#  2 Main Valve relays - 
#
#-------------------------------------------------------------
switch:
  - platform: gpio
    id: enc12v_dpdt1
    name: "Main Valve Relay Enc12v-1"   
    pin:
      pcf8574: pcf8574_hub_2
      number: 0
      mode: OUTPUT
      inverted: true
  - platform: gpio
    id: enc12v_dpdt2
    name: "Main Valve Relay Enc12v-2"   
    pin:
      pcf8574: pcf8574_hub
      number: 0
      mode: OUTPUT
      inverted: true
#-------------------------------------------------------------
#-------------------------------------------------------------
#   Sprinkler Valve Assignments
#-------------------------------------------------------------

  - platform: gpio
    name: "Enc12v-Valve1"
    id: lawn_sprinkler_valve_sw0
    pin:
      pcf8574: pcf8574_hub_2
      number: 1
      mode: OUTPUT
      inverted: true

  - platform: gpio
    name: "Enc12v-Valve2"
    id: lawn_sprinkler_valve_sw1
    pin:
      pcf8574: pcf8574_hub_2
      number: 2
      mode: OUTPUT
      inverted: true

  - platform: gpio
    name: "Enc12v-Valve3"
    id: lawn_sprinkler_valve_sw2
    pin:
      pcf8574: pcf8574_hub_2
      number: 3
      mode: OUTPUT
      inverted: true
      
  - platform: gpio
    name: "Enc12v-Valve4"
    id: lawn_sprinkler_valve_sw3
    pin:
      pcf8574: pcf8574_hub_2
      number: 4
      mode: OUTPUT
      inverted: true

  - platform: gpio
    name: "Enc12v-Valve5"
    id: lawn_sprinkler_valve_sw4
    pin:
      pcf8574: pcf8574_hub_2
      number: 5
      mode: OUTPUT
      inverted: true
      
  - platform: gpio
    name: "Enc12v-Valve6"
    id: lawn_sprinkler_valve_sw5
    pin:
      pcf8574: pcf8574_hub_2
      number: 6
      mode: OUTPUT
      inverted: true

  - platform: gpio
    name: "Enc12v-Valve7"
    id: lawn_sprinkler_valve_sw6
    pin:
      pcf8574: pcf8574_hub
      number: 1
      mode: OUTPUT
      inverted: true

  - platform: gpio
    name: "Enc12v-Valve8"
    id: lawn_sprinkler_valve_sw7
    pin:
      pcf8574: pcf8574_hub
      number: 2
      mode: OUTPUT
      inverted: true

  - platform: gpio
    name: "Enc12v-Valve9"
    id: lawn_sprinkler_valve_sw8
    pin:
      pcf8574: pcf8574_hub
      number: 3
      mode: OUTPUT
      inverted: true

  - platform: gpio
    name: "Enc12v-Valve10"
    id: lawn_sprinkler_valve_sw9
    pin:
      pcf8574: pcf8574_hub
      number: 4
      mode: OUTPUT
      inverted: true

  - platform: gpio
    name: "Enc12v-Valve11"
    id: lawn_sprinkler_valve_sw10
    pin:
      pcf8574: pcf8574_hub
      number: 5
      mode: OUTPUT
      inverted: true
      
  - platform: gpio
    name: "Enc12v-Valve12"
    id: lawn_sprinkler_valve_sw11
    pin:
      pcf8574: pcf8574_hub
      number: 6
      mode: OUTPUT
      inverted: true

  - platform: gpio
    name: "Enc12v-Valve13"
    id: lawn_sprinkler_valve_sw12
    pin:
      pcf8574: pcf8574_hub_2
      number: 8
      mode: OUTPUT
      inverted: true
      
  - platform: gpio
    name: "Enc12v-Valve14"
    id: lawn_sprinkler_valve_sw13
    pin:
      pcf8574: pcf8574_hub_2
      number: 9
      mode: OUTPUT
      inverted: true

  - platform: gpio
    name: "Enc12v-Valve15"
    id: lawn_sprinkler_valve_sw14
    pin:
      pcf8574: pcf8574_hub_2
      number: 10
      mode: OUTPUT
      inverted: true

  - platform: gpio
    name: "Enc12v-Valve16"
    id: lawn_sprinkler_valve_sw15
    pin:
      pcf8574: pcf8574_hub_2
      number: 11
      mode: OUTPUT
      inverted: true

  - platform: gpio
    name: "Enc12v-Valve17"
    id: lawn_sprinkler_valve_sw16
    pin:
      pcf8574: pcf8574_hub_2
      number: 12
      mode: OUTPUT
      inverted: true

  - platform: gpio
    name: "Enc12v-Valve18"
    id: lawn_sprinkler_valve_sw17
    pin:
      pcf8574: pcf8574_hub_2
      number: 13
      mode: OUTPUT
      inverted: true

#-------------------------------------------------------------
#-------------------------------------------------------------
#   Template Switch for Home Assistant to control OLED Displays
#
#   Status is initially published to Home Assistant
#    at boot by on_boot command at top of file.
#-------------------------------------------------------------
  - platform: template
    id: template_switch
    name: "Enc12v OLED Switch"
    turn_on_action:
      - lambda: id(my_display).turn_on();
      - lambda: id(my_display_2).turn_on();
      - switch.template.publish:
            id: template_switch
            state: ON      
    turn_off_action:
      - lambda: id(my_display).turn_off();
      - lambda: id(my_display_2).turn_off();
      - switch.template.publish:
            id: template_switch
            state: OFF
#-------------------------------------------------------------
#-------------------------------------------------------------
#   ILI9341 Display LED control
#-------------------------------------------------------------
  - platform: output
    output: gpio_32_backlight_pwm
    name: "Enc12v-ILI9341 Display Backlight"
    id: back_light
    restore_mode: ALWAYS_ON

output:
  - platform: gpio
    pin: GPIO32
    id: gpio_32_backlight_pwm
    inverted: False
#--------------------------------------------
#--------------------------------------------
#  ILI9341 and 2-SSD1306 Displays
#--------------------------------------------
#   
#   Main Display ILI9441 
#   showing Valve Status, internal temp/humidty,
#   and Zone status information
#--------------------------------------------
#--------------------------------------------
display:
  - platform: ili9xxx
    id: my_tft
    model: ili9341
    rotation: 180
    cs_pin: GPIO22
    dc_pin: GPIO21
    reset_pin: GPIO14
    pages:
      - id: page_tft_1
        lambda: |-
          auto blue = Color(0, 0, 255);
          auto red = Color(255, 0, 0);
          auto green = Color(0, 255, 0);
          it.fill(Color::BLACK);
          it.printf(5, 2, id(my_font_2), id(my_red), "Zone Valve 1- 18 Status:");

          it.printf(4, 25, id(my_font_5), "Zone 1:");
          if (id(lawn_sprinkler_valve_sw0).state) {
            it.filled_circle(58, 33, 5, green); 
            }else{
             it.circle(58, 33, 5, blue); 
            }
          it.printf(75, 25, id(my_font_5), "Zone 7:");
          if (id(lawn_sprinkler_valve_sw6).state) {
            it.filled_circle(129, 33, 5, green); 
            }else{
             it.circle(129, 33, 5, blue); 
            }

          it.printf(147, 25, id(my_font_5), "Zone 13:");
          if (id(lawn_sprinkler_valve_sw12).state) {
            it.filled_circle(210, 33, 5, green); 
            }else{
             it.circle(210, 33, 5, blue); 
            }

          it.printf(4, 45, id(my_font_5), "Zone 2:");
          if (id(lawn_sprinkler_valve_sw1).state) {
            it.filled_circle(58, 53, 5, green);
            }else{
             it.circle(58, 53, 5, blue); 
            }
          it.printf(75, 45, id(my_font_5), "Zone 8:");
          if (id(lawn_sprinkler_valve_sw7).state) {
            it.filled_circle(129, 53, 5, green);
            }else{
             it.circle(129, 53, 5, blue); 
            }

          it.printf(147, 45, id(my_font_5), "Zone 14:");
          if (id(lawn_sprinkler_valve_sw13).state) {
            it.filled_circle(210, 53, 5, green);
            }else{
             it.circle(210, 53, 5, blue); 
            }

          it.printf(4, 65, id(my_font_5), "Zone 3:");
          if (id(lawn_sprinkler_valve_sw2).state) {
            it.filled_circle(58, 73, 5, green);           
            }else{
             it.circle(58, 73, 5, blue);
            }
          it.printf(75, 65, id(my_font_5), "Zone 9:");
          if (id(lawn_sprinkler_valve_sw8).state) {
            it.filled_circle(129, 73, 5, green);           
            }else{
             it.circle(129, 73, 5, blue);
            }

          it.printf(147, 65, id(my_font_5), "Zone 15:");
          if (id(lawn_sprinkler_valve_sw14).state) {
            it.filled_circle(210, 73, 5, green);           
            }else{
             it.circle(210, 73, 5, blue);
            }

          it.printf(4, 85, id(my_font_5), "Zone 4:");
          if (id(lawn_sprinkler_valve_sw3).state) {
            it.filled_circle(58, 93, 5, green);
            }else{
             it.circle(58, 93, 5, blue);
            }
          it.printf(75, 85, id(my_font_5), "Zone 10:");
          if (id(lawn_sprinkler_valve_sw9).state) {
            it.filled_circle(137, 93, 5, green);
            }else{
             it.circle(137, 93, 5, blue);
            }
          it.printf(147, 85, id(my_font_5), "Zone 16:");
          if (id(lawn_sprinkler_valve_sw15).state) {
            it.filled_circle(210, 93, 5, green);
            }else{
             it.circle(210, 93, 5, blue);
            }


          it.printf(4, 105, id(my_font_5), "Zone 5:");
          if (id(lawn_sprinkler_valve_sw4).state) {
            it.filled_circle(58, 113, 5, green);
            }else{
             it.circle(58, 113, 5, blue);
            }
          it.printf(75, 105, id(my_font_5), "Zone 11:");
          if (id(lawn_sprinkler_valve_sw10).state) {
            it.filled_circle(137, 113, 5, green);
            }else{
             it.circle(137, 113, 5, blue);
            }
          it.printf(147, 105, id(my_font_5), "Zone 17:");
          if (id(lawn_sprinkler_valve_sw16).state) {
            it.filled_circle(210, 113, 5, green);
            }else{
             it.circle(210, 113, 5, blue);
            }



          it.printf(4, 125, id(my_font_5), "Zone 6:");
          if (id(lawn_sprinkler_valve_sw5).state) {
            it.filled_circle(58, 133, 5, green);
            }else{
             it.circle(58, 133, 5, blue);
            }
          it.printf(75, 125, id(my_font_5), "Zone 12:");
          if (id(lawn_sprinkler_valve_sw11).state) {
            it.filled_circle(137, 133, 5, green);
            }else{
             it.circle(137, 133, 5, blue);
            }
          it.printf(147, 125, id(my_font_5), "Zone 18:");
          if (id(lawn_sprinkler_valve_sw17).state) {
            it.filled_circle(210, 133, 5, green);
            }else{
             it.circle(210, 133, 5, blue);
            }

          it.filled_rectangle(0, 145, 240, 5, blue);
          it.printf(20, 155, id(my_font_5), "Enclosure 6 Environmentals:"); 

          if ((id(enc12v_1_int_t).state) > 80.0) {
          it.printf(10, 170, id(my_font_3), id(my_red), "INT_T- %.1fÂ°", id(int_t).state);
          } else {
          it.printf(10, 170, id(my_font_3), id(my_green), "INT_T- %.1fÂ°", id(int_t).state);
          }
          if ((id(enc12v_1_int_h).state) > 45.0) {
            it.printf(125, 170, id(my_font_3), id(my_red), "INT_H- %.1f pct", id(int_h).state);
          } else {
            it.printf(125, 170, id(my_font_3), id(my_green), "INT_H- %.1f pct", id(int_h).state);
          }

          it.printf(3, 190, id(my_font_2), "Main Valve Status:");
          if (id(enc12v_dpdt1).state) {
          it.print(160, 190, id(my_font_2), id(my_green), "OPEN");
          } else {
          it.print(160, 190, id(my_font_2), id(my_red), "CLOSED");
          }


          it.filled_rectangle(0, 210, 240, 5, blue);
          it.print(30, 215, id(my_font_7), "Irrigation Status:");

            auto multiplier_valve = id(enc12v_lawn_sprinkler_ctrlr).multiplier();
            it.printf(75, 244, id(my_font_3),id(my_green), "Multiplier -  %.1f ", multiplier_valve);

          if (id(active_valve).state) {
             it.printf(40, 260, id(my_font_8), id(my_green), "Zone On -  %.0f ", id(active_valve).state);
             }else{
              it.printf(65, 260, id(my_font_8), id(my_red), "All Off");
             }


          if (id(enc12v_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() > 0) {
            it.printf(20, 288, id(my_font_7), id(my_green),"Time %2d min %2d sec", id(enc12v_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() / 60, id(enc12v_lawn_sprinkler_ctrlr).time_remaining_active_valve().value() % 60);
           } else {
              it.printf(25, 288, id(my_font_7), id(my_blue), "Zone Valves Idle");
           }
#--------------------------------------------
#--------------------------------------------
#   Display Time, SSID, Wireless signal, IP ddress
# ------------------------------------------------------
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    i2c_id: multiplex0channel2
    id: my_display
    address: 0x3C
    pages:
      - id: page0_1
        lambda: |-
          it.strftime(15, 0, id(my_font_3), "Time:   %H:%M:%S", id(esptime).now());
          it.printf(15, 20, id(my_font_3), "SSID: %s", id(myssid_2).state.c_str());
          it.printf(24, 35, id(my_font_3), "%.1f dbm", id(my_wifi_2).state);        
          it.printf(10, 50, id(my_font_3), "IP:   %s", id(myip_2).state.c_str());
# ------------------------------------------------------
# ------------------------------------------------------
#   Display 12v and 5v status
# ------------------------------------------------------
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    i2c_id: multiplex0channel3
    id: my_display_2
    address: 0x3C
    pages:
      - id: page1_1
        lambda: |-
          it.printf(0, 0, id(my_font_3), "12V Valve Voltage");
          it.printf(0, 15, id(my_font_3), "Valve Bus: %.3f V", id(ina219_bus_v0).state);
          it.printf(0, 30, id(my_font_3), "5V USB Voltage");
          it.printf(0, 45, id(my_font_3), "USB Bus: %.3f V", id(ina219_bus_v1).state);
